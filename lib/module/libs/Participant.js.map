{"version":3,"names":["ControllableModuleType","Participant","get","props","_binder","_internalEvents","_roomId","localParticipant","_updateInternal","constructor","_props","participantId","user","state","enteredAt","exitedAt","duration","isAudioEnabled","isVideoEnabled","updatedAt","LocalParticipant","binder","internalEvents","roomId","nativeModule","muteMicrophone","GROUP_CALL","emit","unmuteMicrophone","stopVideo","startVideo","switchCamera"],"sources":["Participant.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type { LocalParticipantMethods, ParticipantProperties, RoomListener } from '../types';\nimport { ControllableModuleType } from '../types';\nimport type NativeBinder from './NativeBinder';\nimport type { InternalEvents } from './Room';\n\nexport class Participant implements ParticipantProperties {\n  /** @internal **/\n  public static get(\n    props: ParticipantProperties | null,\n    _binder?: NativeBinder,\n    _internalEvents?: InternalEvents<RoomListener>,\n    _roomId?: string,\n  ) {\n    if (!props) return null;\n\n    const localParticipant = new Participant(props);\n    return localParticipant._updateInternal(props);\n  }\n\n  constructor(props: ParticipantProperties) {\n    this._props = props;\n  }\n\n  protected _props: ParticipantProperties;\n\n  private _updateInternal(props: ParticipantProperties) {\n    this._props = props;\n    return this;\n  }\n\n  public get participantId() {\n    return this._props.participantId;\n  }\n  public get user() {\n    return this._props.user;\n  }\n  public get state() {\n    return this._props.state;\n  }\n  public get enteredAt() {\n    return this._props.enteredAt;\n  }\n  public get exitedAt() {\n    return this._props.exitedAt;\n  }\n  public get duration() {\n    return this._props.duration;\n  }\n  public get isAudioEnabled() {\n    return this._props.isAudioEnabled;\n  }\n  public get isVideoEnabled() {\n    return this._props.isVideoEnabled;\n  }\n  public get updatedAt() {\n    return this._props.updatedAt;\n  }\n}\n\nexport class LocalParticipant extends Participant implements LocalParticipantMethods {\n  /** @internal **/\n  public static get(\n    props: ParticipantProperties | null,\n    binder: NativeBinder,\n    internalEvents: InternalEvents<RoomListener>,\n    roomId: string,\n  ) {\n    if (!props) return null;\n\n    return new LocalParticipant(props, binder, internalEvents, roomId);\n  }\n\n  constructor(\n    props: ParticipantProperties,\n    binder: NativeBinder,\n    internalEvents: InternalEvents<RoomListener>,\n    roomId: string,\n  ) {\n    super(props);\n    this._binder = binder;\n    this._internalEvents = internalEvents;\n    this._roomId = roomId;\n  }\n\n  private _binder: NativeBinder;\n  private _internalEvents: InternalEvents<RoomListener>;\n  private _roomId: string;\n\n  /**\n   * Mutes the audio of the local user.\n   * Will trigger {@link RoomListener.onRemoteAudioSettingsChanged} method of remote participants.\n   * If the remote user changes their audio settings, the local user will be notified via the same method.\n   *\n   * @since 1.0.0\n   */\n  public muteMicrophone = () => {\n    this._binder.nativeModule.muteMicrophone(ControllableModuleType.GROUP_CALL, this._roomId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isAudioEnabled = false;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Unmutes the audio of the local user.\n   * Will trigger {@link RoomListener.onRemoteAudioSettingsChanged} method of remote participants.\n   * If the remote user changes their audio settings, the local user will be notified via the same method.\n   *\n   * @since 1.0.0\n   */\n  public unmuteMicrophone = () => {\n    this._binder.nativeModule.unmuteMicrophone(ControllableModuleType.GROUP_CALL, this._roomId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isAudioEnabled = true;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Unmutes the audio of the local user.\n   * Will trigger {@link RoomListener.onRemoteVideoSettingsChanged} method of remote participants.\n   * If the remote user changes their video settings, the local user will be notified via the same method.\n   *\n   * @since 1.0.0\n   */\n  public stopVideo = () => {\n    this._binder.nativeModule.stopVideo(ControllableModuleType.GROUP_CALL, this._roomId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isVideoEnabled = false;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Unmutes the audio of the local user.\n   * Will trigger {@link RoomListener.onRemoteVideoSettingsChanged} method of remote participants.\n   * If the remote user changes their video settings, the local user will be notified via the same method.\n   *\n   * @since 1.0.0\n   */\n  public startVideo = () => {\n    this._binder.nativeModule.startVideo(ControllableModuleType.GROUP_CALL, this._roomId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isVideoEnabled = true;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Toggles the selection between the front and the back camera.\n   *\n   * on Android, In case of more than two cameras, the next camera will be selected.\n   * If the last camera is already selected, the first one will be selected again.\n   *\n   * @since 1.0.0\n   */\n  public switchCamera = () => {\n    return this._binder.nativeModule.switchCamera(ControllableModuleType.GROUP_CALL, this._roomId);\n  };\n}\n"],"mappings":"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"}