{"version":3,"names":["DirectCall","poolRelease","pool","get","binder","props","callId","directCall","_updateInternal","constructor","emit","event","args","_internalEvents","forEach","listener","add","push","index","indexOf","Logger","debug","unsubscribes","disposeInternal","disposeNative","_binder","addListener","CallsEvent","DIRECT_CALL","type","data","additionalData","DirectCallEventType","ON_ESTABLISHED","onEstablished","ON_CONNECTED","onConnected","ON_RECONNECTING","onReconnecting","ON_RECONNECTED","onReconnected","ON_ENDED","onEnded","ON_REMOTE_AUDIO_SETTINGS_CHANGED","onRemoteAudioSettingsChanged","ON_REMOTE_VIDEO_SETTINGS_CHANGED","onRemoteVideoSettingsChanged","ON_LOCAL_VIDEO_SETTINGS_CHANGED","onLocalVideoSettingsChanged","ON_REMOTE_RECORDING_STATUS_CHANGED","onRemoteRecordingStatusChanged","ON_CUSTOM_ITEMS_UPDATED","onCustomItemsUpdated","updatedKeys","ON_CUSTOM_ITEMS_DELETED","onCustomItemsDeleted","deletedKeys","ON_USER_HOLD_STATUS_CHANGED","onUserHoldStatusChanged","isLocalUser","isUserOnHold","ON_AUDIO_DEVICE_CHANGED","Platform","OS","onAudioDeviceChanged","platform","currentAudioDevice","availableAudioDevices","reason","RouteChangeReason","unknown","currentRoute","inputs","outputs","previousRoute","fn","options","audioEnabled","frontCamera","videoEnabled","holdActiveCall","nativeModule","accept","end","device","selectVideoDevice","ControllableModuleType","selectAudioDevice","muteMicrophone","_props","isLocalAudioEnabled","unmuteMicrophone","startVideo","isLocalVideoEnabled","stopVideo","switchCamera","videoViewId","updateLocalVideoView","updateRemoteVideoView","ios_callUUID","android_availableAudioDevices","android_currentAudioDevice","availableVideoDevices","callLog","callee","caller","currentVideoDevice","customItems","duration","endedBy","isEnded","isLocalScreenShareEnabled","isOnHold","isOngoing","isRemoteAudioEnabled","isRemoteVideoEnabled","isVideoCall","localRecordingStatus","localUser","myRole","remoteRecordingStatus","remoteUser","endResult"],"sources":["DirectCall.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport type {\n  AudioDevice,\n  CallOptions,\n  DirectCallListener,\n  DirectCallMethods,\n  DirectCallProperties,\n  VideoDevice,\n} from '../types';\nimport { ControllableModuleType, RouteChangeReason } from '../types';\nimport { Logger } from '../utils/logger';\nimport type NativeBinder from './NativeBinder';\nimport { CallsEvent, DirectCallEventType } from './NativeBinder';\n\nexport class DirectCall implements DirectCallProperties, DirectCallMethods {\n  /** @internal **/\n  private static pool: Record<string, DirectCall> = {};\n\n  /** @internal **/\n  public static poolRelease() {\n    DirectCall.pool = {};\n  }\n\n  /** @internal **/\n  public static get(binder: NativeBinder, props: DirectCallProperties) {\n    if (!DirectCall.pool[props.callId]) DirectCall.pool[props.callId] = new DirectCall(binder, props);\n    const directCall = DirectCall.pool[props.callId];\n    return directCall._updateInternal(props);\n  }\n\n  constructor(binder: NativeBinder, props: DirectCallProperties) {\n    this._binder = binder;\n    this._props = props;\n  }\n\n  private _binder: NativeBinder;\n  private _props: DirectCallProperties;\n  private _internalEvents = {\n    pool: [] as Partial<DirectCallListener>[],\n    emit: (event: keyof DirectCallListener, ...args: unknown[]) => {\n      // @ts-ignore\n      this._internalEvents.pool.forEach((listener) => listener[event]?.(...args));\n    },\n    add: (listener: Partial<DirectCallListener>) => {\n      this._internalEvents.pool.push(listener);\n      return () => {\n        const index = this._internalEvents.pool.indexOf(listener);\n        if (index > -1) delete this._internalEvents.pool[index];\n      };\n    },\n  };\n  private _updateInternal(props: DirectCallProperties) {\n    this._props = props;\n    return this;\n  }\n\n  public get ios_callUUID() {\n    return this._props.ios_callUUID;\n  }\n  public get android_availableAudioDevices() {\n    return this._props.android_availableAudioDevices;\n  }\n  public get android_currentAudioDevice() {\n    return this._props.android_currentAudioDevice;\n  }\n  public get availableVideoDevices() {\n    return this._props.availableVideoDevices;\n  }\n  public get callId() {\n    return this._props.callId;\n  }\n  public get callLog() {\n    return this._props.callLog;\n  }\n  public get callee() {\n    return this._props.callee;\n  }\n  public get caller() {\n    return this._props.caller;\n  }\n  public get currentVideoDevice() {\n    return this._props.currentVideoDevice;\n  }\n  public get customItems() {\n    return this._props.customItems;\n  }\n  public get duration() {\n    return this._props.duration;\n  }\n  public get endedBy() {\n    return this._props.endedBy;\n  }\n  public get isEnded() {\n    return this._props.isEnded;\n  }\n  public get isLocalAudioEnabled() {\n    return this._props.isLocalAudioEnabled;\n  }\n  public get isLocalScreenShareEnabled() {\n    return this._props.isLocalScreenShareEnabled;\n  }\n  public get isLocalVideoEnabled() {\n    return this._props.isLocalVideoEnabled;\n  }\n  public get isOnHold() {\n    return this._props.isOnHold;\n  }\n  public get isOngoing() {\n    return this._props.isOngoing;\n  }\n  public get isRemoteAudioEnabled() {\n    return this._props.isRemoteAudioEnabled;\n  }\n  public get isRemoteVideoEnabled() {\n    return this._props.isRemoteVideoEnabled;\n  }\n  public get isVideoCall() {\n    return this._props.isVideoCall;\n  }\n  public get localRecordingStatus() {\n    return this._props.localRecordingStatus;\n  }\n  public get localUser() {\n    return this._props.localUser;\n  }\n  public get myRole() {\n    return this._props.myRole;\n  }\n  public get remoteRecordingStatus() {\n    return this._props.remoteRecordingStatus;\n  }\n  public get remoteUser() {\n    return this._props.remoteUser;\n  }\n  public get endResult() {\n    return this._props.endResult;\n  }\n\n  /**\n   * Add DirectCall listener.\n   * supports multiple listeners.\n   *\n   * @since 1.0.0\n   */\n  public addListener = (listener: Partial<DirectCallListener>) => {\n    Logger.debug('[DirectCall]', 'addListener', this.callId);\n\n    const unsubscribes: Array<() => void> = [];\n\n    const disposeInternal = this._internalEvents.add(listener);\n    const disposeNative = this._binder.addListener(CallsEvent.DIRECT_CALL, ({ type, data, additionalData }) => {\n      if (data.callId !== this.callId) return;\n\n      this._updateInternal(data);\n      switch (type) {\n        case DirectCallEventType.ON_ESTABLISHED: {\n          listener.onEstablished?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_CONNECTED: {\n          listener.onConnected?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_RECONNECTING: {\n          listener.onReconnecting?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_RECONNECTED: {\n          listener.onReconnected?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_ENDED: {\n          listener.onEnded?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_REMOTE_AUDIO_SETTINGS_CHANGED: {\n          listener.onRemoteAudioSettingsChanged?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_REMOTE_VIDEO_SETTINGS_CHANGED: {\n          listener.onRemoteVideoSettingsChanged?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_LOCAL_VIDEO_SETTINGS_CHANGED: {\n          listener.onLocalVideoSettingsChanged?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_REMOTE_RECORDING_STATUS_CHANGED: {\n          listener.onRemoteRecordingStatusChanged?.(this);\n          break;\n        }\n        case DirectCallEventType.ON_CUSTOM_ITEMS_UPDATED: {\n          listener.onCustomItemsUpdated?.(this, additionalData?.updatedKeys ?? []);\n          break;\n        }\n        case DirectCallEventType.ON_CUSTOM_ITEMS_DELETED: {\n          listener.onCustomItemsDeleted?.(this, additionalData?.deletedKeys ?? []);\n          break;\n        }\n        case DirectCallEventType.ON_USER_HOLD_STATUS_CHANGED: {\n          listener.onUserHoldStatusChanged?.(\n            this,\n            additionalData?.isLocalUser ?? false,\n            additionalData?.isUserOnHold ?? false,\n          );\n          break;\n        }\n        case DirectCallEventType.ON_AUDIO_DEVICE_CHANGED: {\n          if (Platform.OS === 'android') {\n            listener.onAudioDeviceChanged?.(this, {\n              platform: 'android',\n              data: {\n                currentAudioDevice: additionalData?.currentAudioDevice ?? null,\n                availableAudioDevices: additionalData?.availableAudioDevices ?? [],\n              },\n            });\n          }\n          if (Platform.OS === 'ios') {\n            listener.onAudioDeviceChanged?.(this, {\n              platform: 'ios',\n              data: {\n                reason: additionalData?.reason ?? RouteChangeReason.unknown,\n                currentRoute: additionalData?.currentRoute ?? { inputs: [], outputs: [] },\n                previousRoute: additionalData?.previousRoute ?? { inputs: [], outputs: [] },\n              },\n            });\n          }\n          break;\n        }\n      }\n    });\n\n    unsubscribes.push(disposeNative, disposeInternal);\n    return () => unsubscribes.forEach((fn) => fn());\n  };\n\n  /**\n   * Accepts call.\n   *\n   * @since 1.0.0\n   */\n  public accept = async (\n    options: CallOptions = { audioEnabled: true, frontCamera: true, videoEnabled: true },\n    holdActiveCall = false,\n  ) => {\n    await this._binder.nativeModule.accept(this.callId, options, holdActiveCall);\n  };\n\n  /**\n   * Ends the call.\n   * {@link DirectCallListener.onEnded} will be called after successful ending.\n   * This listener will also be called when the remote user ends the call.\n   *\n   * @since 1.0.0\n   */\n  public end = async () => {\n    await this._binder.nativeModule.end(this.callId);\n  };\n\n  /**\n   * Selects video device.\n   * Changes current video device asynchronously.\n   *\n   * @since 1.0.0\n   */\n  public selectVideoDevice = async (device: VideoDevice) => {\n    await this._binder.nativeModule.selectVideoDevice(ControllableModuleType.DIRECT_CALL, this.callId, device);\n  };\n\n  /**\n   * Selects audio device.\n   *\n   * @platform Android\n   * @since 1.0.0\n   */\n  public android_selectAudioDevice = async (device: AudioDevice) => {\n    await this._binder.nativeModule.selectAudioDevice(ControllableModuleType.DIRECT_CALL, this.callId, device);\n  };\n\n  /**\n   * Mutes the audio of local user.\n   * Will trigger {@link DirectCallListener.onRemoteAudioSettingsChanged} method of the remote user.\n   * If the remote user changes their audio settings, local user will be notified via same delegate method.\n   *\n   * @since 1.0.0\n   */\n  public muteMicrophone = () => {\n    this._binder.nativeModule.muteMicrophone(ControllableModuleType.DIRECT_CALL, this.callId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isLocalAudioEnabled = false;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Unmutes the audio of local user.\n   * Will trigger {@link DirectCallListener.onRemoteAudioSettingsChanged} method of the remote user.\n   * If the remote user changes their audio settings, local user will be notified via same delegate method.\n   *\n   * @since 1.0.0\n   */\n  public unmuteMicrophone = () => {\n    this._binder.nativeModule.unmuteMicrophone(ControllableModuleType.DIRECT_CALL, this.callId);\n\n    // NOTE: native doesn't have onLocalAudioSettingsChanged event\n    this._props.isLocalAudioEnabled = true;\n    this._internalEvents.emit('onPropertyUpdatedManually', this);\n  };\n\n  /**\n   * Starts local video.\n   * If the callee changes video settings,\n   * the caller is notified via the {@link DirectCallListener.onRemoteVideoSettingsChanged} listener.\n   *\n   * @since 1.0.0\n   */\n  public startVideo = () => {\n    this._binder.nativeModule.startVideo(ControllableModuleType.DIRECT_CALL, this.callId);\n    this._props.isLocalVideoEnabled = true;\n\n    // NOTE: ios native doesn't have onLocalAudioSettingsChanged event\n    Platform.OS === 'ios' && this._internalEvents.emit('onLocalVideoSettingsChanged', this);\n  };\n\n  /**\n   * Stops local video.\n   * If the callee changes video settings,\n   * the caller is notified via the {@link DirectCallListener.onRemoteVideoSettingsChanged} listener.\n   *\n   * @since 1.0.0\n   */\n  public stopVideo = () => {\n    this._binder.nativeModule.stopVideo(ControllableModuleType.DIRECT_CALL, this.callId);\n    this._props.isLocalVideoEnabled = false;\n\n    // NOTE: ios native doesn't have onLocalAudioSettingsChanged event\n    Platform.OS === 'ios' && this._internalEvents.emit('onLocalVideoSettingsChanged', this);\n  };\n\n  /**\n   * Toggles the selection between the front and the back camera.\n   *\n   * on Android, In case of more than two cameras, the next camera will be selected.\n   * If the last camera is already selected, the first one will be selected again.\n   *\n   * @since 1.0.0\n   */\n  public switchCamera = async () => {\n    await this._binder.nativeModule.switchCamera(ControllableModuleType.DIRECT_CALL, this.callId);\n  };\n\n  /**\n   * Update local video view.\n   * @see DirectCallVideoView.videoViewId\n   *\n   * @since 1.0.0\n   */\n  public updateLocalVideoView = (videoViewId: number) => {\n    this._binder.nativeModule.updateLocalVideoView(this.callId, videoViewId);\n  };\n\n  /**\n   * Update remote video view.\n   * @see DirectCallVideoView.videoViewId\n   *\n   * @since 1.0.0\n   */\n  public updateRemoteVideoView = (videoViewId: number) => {\n    this._binder.nativeModule.updateRemoteVideoView(this.callId, videoViewId);\n  };\n}\n"],"mappings":"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"}