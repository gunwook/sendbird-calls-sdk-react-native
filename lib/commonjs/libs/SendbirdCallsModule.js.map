{"version":3,"names":["SendbirdCallsModule","constructor","binder","noop","nativeModule","getConstants","NATIVE_SDK_VERSION","_currentUser","getCurrentUser","currentUser","callId","callProps","getDirectCall","DirectCall","get","appId","initialized","applicationId","_init","Logger","debug","poolRelease","Room","addListener","CallsEvent","DEFAULT","type","data","DefaultEventType","ON_RINGING","_onRinging","initialize","_applicationId","_initialized","userId","accessToken","authenticate","deauthenticate","token","unique","registerPushToken","unregisterPushToken","Platform","OS","registerVoIPPushToken","unregisterVoIPPushToken","routePickerView","handleFirebaseMessageData","params","queryKey","createDirectCallLogListQuery","DirectCallLogListQuery","NativeQueryType","DIRECT_CALL_LOG","createRoomListQuery","RoomListQuery","ROOM_LIST","VERSION","pkg","version","NATIVE_VERSION","RoomType","getOngoingCalls","dial","calleeUserId","isVideoCall","options","audioEnabled","frontCamera","videoEnabled","createRoom","roomType","then","props","fetchRoomById","roomId","getCachedRoomById","onRinging","listener"],"sources":["SendbirdCallsModule.tsx"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport pkg from '../../package.json';\nimport type {\n  CallOptions,\n  DirectCallLogQueryParams,\n  DirectCallProperties,\n  RoomListQueryParams,\n  SendbirdCallsJavascriptSpec,\n  User,\n} from '../types';\nimport { NativeConstants, NativeQueryType, RoomType } from '../types';\nimport { noop } from '../utils';\nimport { Logger } from '../utils/logger';\nimport { DirectCallLogListQuery, RoomListQuery } from './BridgedQuery';\nimport { DirectCall } from './DirectCall';\nimport NativeBinder, { CallsEvent, DefaultEventType } from './NativeBinder';\nimport { Room } from './Room';\n\n/**\n * SendbirdCallsModule class for SendbirdCalls\n */\nexport default class SendbirdCallsModule implements SendbirdCallsJavascriptSpec {\n  constructor(private binder: NativeBinder) {}\n\n  private _applicationId = '';\n  private _initialized = false;\n  private _currentUser: User | null = null;\n  private _onRinging: (props: DirectCallProperties) => void = noop;\n\n  /**\n   * Returns current React-Native SDK version.\n   *\n   * @since 1.0.0\n   */\n  public get VERSION() {\n    return pkg.version;\n  }\n\n  /**\n   * Returns current iOS/Android SDK version.\n   *\n   * @since 1.0.0\n   */\n  public get NATIVE_VERSION() {\n    return this.getConstants()['NATIVE_SDK_VERSION'];\n  }\n\n  /**\n   * Returns the SDK Logger\n   *\n   * @since 1.0.0\n   */\n  public get Logger() {\n    return Logger;\n  }\n\n  /**\n   * Returns current application ID.\n   *\n   * @since 1.0.0\n   */\n  public get applicationId() {\n    return this._applicationId;\n  }\n\n  /**\n   * Returns is SDK initialized.\n   *\n   * @since 1.0.0\n   */\n  public get initialized() {\n    return this._initialized;\n  }\n\n  /**\n   * Gets the current `User`.\n   * Returns the current `User`. If SendBirdCall is not authenticated, `null` will be returned.\n   *\n   * @since 1.0.0\n   */\n  public get currentUser() {\n    return this._currentUser;\n  }\n\n  /**\n   * An enum that represents different types of a room.\n   * Returns {@link RoomType}\n   *\n   * @since 1.0.0\n   */\n  public get RoomType() {\n    return RoomType;\n  }\n\n  /**\n   * Gets the constants from React-Native Native module\n   * Returns the object\n   *\n   * @since 1.0.0\n   */\n  protected getConstants = (): NativeConstants => {\n    // @ts-ignore\n    return this.binder.nativeModule.getConstants?.() ?? { NATIVE_SDK_VERSION: '' };\n  };\n\n  /**\n   * Gets the current `User` from native\n   * Returns the current `User`. If SendBirdCall is not authenticated, `null` will be returned.\n   *\n   * @since 1.0.0\n   */\n  public getCurrentUser = async () => {\n    this._currentUser = await this.binder.nativeModule.getCurrentUser();\n    return this.currentUser;\n  };\n\n  /**\n   * Returns all ongoing calls, including the active call and all calls on hold.\n   *\n   * @since 1.0.0\n   */\n  public getOngoingCalls(): Promise<DirectCallProperties[]> {\n    return this.binder.nativeModule.getOngoingCalls();\n  }\n\n  /**\n   * Gets call from call ID or call UUID\n   *\n   * @since 1.0.0\n   */\n  public getDirectCall = async (callId: string): Promise<DirectCall> => {\n    const callProps = await this.binder.nativeModule.getDirectCall(callId);\n    return DirectCall.get(this.binder, callProps);\n  };\n\n  /**\n   * Initializes SendbirdCalls.\n   *\n   * @since 1.0.0\n   */\n  public initialize = (appId: string) => {\n    if (this.initialized) {\n      if (this.applicationId !== appId) {\n        return this._init(appId);\n      } else {\n        return this.initialized;\n      }\n    } else {\n      return this._init(appId);\n    }\n  };\n\n  private _init = (appId: string) => {\n    this.Logger.debug('[SendbirdCalls]', 'initialize()');\n\n    DirectCall.poolRelease();\n    Room.poolRelease();\n\n    if (!this.initialized) {\n      this.binder.addListener(CallsEvent.DEFAULT, ({ type, data }) => {\n        if (type === DefaultEventType.ON_RINGING) {\n          this.Logger.debug('[SendbirdCalls]', 'onRinging', data.callId);\n          this._onRinging(data);\n        }\n      });\n    }\n\n    this.binder.nativeModule.initialize(appId);\n    this._applicationId = appId;\n    this._initialized = true;\n    return this.initialized;\n  };\n\n  /**\n   * Authenticates.\n   *\n   * @since 1.0.0\n   */\n  public authenticate = async (userId: string, accessToken: string | null = null) => {\n    this._currentUser = await this.binder.nativeModule.authenticate(userId, accessToken);\n    return this.currentUser as User;\n  };\n\n  /**\n   * Deauthenticates.\n   *\n   * @since 1.0.0\n   */\n  public deauthenticate = async () => {\n    await this.binder.nativeModule.deauthenticate();\n    this._currentUser = null;\n  };\n\n  /**\n   * Registers push token for current user.\n   *\n   * on iOS, push token means APNS token.\n   * on Android, push token means FCM token.\n   *\n   * ```ts\n   * if (Platform.OS === 'android') {\n   *   const fcmToken = await messaging().getToken();\n   *   await SendbirdCalls.registerPushToken(fcmToken);\n   * }\n   * if (Platform.OS === 'ios') {\n   *   const apnsToken = await messaging().getAPNSToken();\n   *   await SendbirdCalls.registerPushToken(apnsToken);\n   * }\n   * ```\n   *\n   * @since 1.0.0\n   */\n  public registerPushToken = async (token: string, unique = true) => {\n    await this.binder.nativeModule.registerPushToken(token, unique);\n  };\n\n  /**\n   * Unregisters push token for current user.\n   *\n   * @since 1.0.0\n   */\n  public unregisterPushToken = async (token: string) => {\n    await this.binder.nativeModule.unregisterPushToken(token);\n  };\n\n  /**\n   * Makes a call to user(callee) directly. (1:1 Call).\n   * Use the {@link CallOptions} object to choose initial call configuration (e.g. muted/unmuted)\n   *\n   * @since 1.0.0\n   */\n  public dial(\n    calleeUserId: string,\n    isVideoCall: boolean,\n    options: CallOptions = { audioEnabled: true, frontCamera: true, videoEnabled: true },\n  ): Promise<DirectCallProperties> {\n    return this.binder.nativeModule.dial(calleeUserId, isVideoCall, options);\n  }\n\n  /**\n   * Creates a {@link Room} for group calls.\n   *\n   * @since 1.0.0\n   */\n  public createRoom(roomType: RoomType): Promise<Room> {\n    return this.binder.nativeModule.createRoom(roomType).then((props) => Room.get(this.binder, props));\n  }\n\n  /**\n   * Fetches a room instance from Sendbird server.\n   *\n   * @since 1.0.0\n   */\n  public fetchRoomById(roomId: string): Promise<Room> {\n    return this.binder.nativeModule.fetchRoomById(roomId).then((props) => Room.get(this.binder, props));\n  }\n\n  /**\n   * Gets a locally-cached room instance by room ID.\n   *\n   * @since 1.0.0\n   */\n  public getCachedRoomById(roomId: string): Promise<Room | null> {\n    return this.binder.nativeModule\n      .getCachedRoomById(roomId)\n      .then((props) => (props ? Room.get(this.binder, props) : null));\n  }\n\n  /**\n   * To receive native-like calls while an app is in the background or closed, a device registration token must be registered to the server.\n   * Register a device push token after authentication has completed using the `SendbirdCalls.ios_registerVoIPPushToken()` method.\n   *\n   * @platform iOS\n   * @since 1.0.0\n   */\n  public ios_registerVoIPPushToken = async (token: string, unique = true) => {\n    if (Platform.OS !== 'ios') return;\n    await this.binder.nativeModule.registerVoIPPushToken(token, unique);\n  };\n\n  /**\n   * Unregisters a VoIP push token of specific device.\n   * You will not receive VoIP push notification for a call anymore.\n   *\n   * @platform iOS\n   * @since 1.0.0\n   */\n  public ios_unregisterVoIPPushToken = async (token: string) => {\n    if (Platform.OS !== 'ios') return;\n    await this.binder.nativeModule.unregisterVoIPPushToken(token);\n  };\n\n  /**\n   * Show-up a view that allows user to change the system audio route.\n   * [AVRoutePickerView](https://developer.apple.com/documentation/avkit/avroutepickerview) in iOS 11 or later\n   *\n   * @platform iOS\n   * @since 1.0.0\n   */\n  public ios_routePickerView = () => {\n    if (Platform.OS !== 'ios') return;\n    this.binder.nativeModule.routePickerView();\n  };\n\n  /**\n   * Handles Firebase message data.\n   * Returns true if SendBird call message. Otherwise false.\n   *\n   * @platform Android\n   * @since 1.0.0\n   */\n  public android_handleFirebaseMessageData = (data?: Record<string, string>) => {\n    if (Platform.OS !== 'android' || !data?.['sendbird_call']) {\n      return false;\n    } else {\n      this.binder.nativeModule.handleFirebaseMessageData(data);\n      return true;\n    }\n  };\n\n  /**\n   * Set onRinging listener\n   * A listener called when received dialing.\n   */\n  public onRinging(listener: (props: DirectCallProperties) => void) {\n    this._onRinging = listener;\n  }\n\n  /**\n   * Creates direct call log list query.\n   *\n   * @since 1.0.0\n   */\n  public createDirectCallLogListQuery = async (params: DirectCallLogQueryParams = {}) => {\n    const queryKey = await this.binder.nativeModule.createDirectCallLogListQuery(params);\n    return new DirectCallLogListQuery(queryKey, NativeQueryType.DIRECT_CALL_LOG, this.binder);\n  };\n\n  /**\n   * Creates a query for room list with specified parameters.\n   *\n   * @since 1.0.0\n   */\n  public createRoomListQuery = async (params: RoomListQueryParams = {}) => {\n    const queryKey = await this.binder.nativeModule.createRoomListQuery(params);\n    return new RoomListQuery(queryKey, NativeQueryType.ROOM_LIST, this.binder);\n  };\n}\n"],"mappings":"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"}